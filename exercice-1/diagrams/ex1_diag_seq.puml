@startuml
!pragma teoz true
box "Diagramme de sÃ©quence"
participant "producer0:pthread_t" as producer0
participant "producer1:pthread_t" as producer1
participant "producer2:pthread_t" as producer2
participant "producer3:pthread_t" as producer3
participant "mutex_free_index_tab:pthread_mutex_t" as mutex_free
participant "mutex_full_index_tab:pthread_mutex_t" as mutex_full
participant "sem_free:sem_t = 4" as sem_free
participant "acquisitionManager"
participant "consumer:pthread_t" as consumer
end box

activate producer0
producer0 -> sem_free 

producer0 -> mutex_free
activate mutex_free #gold
return


producer0 -> mutex_full
activate mutex_full #gold
return

activate sem_free
return


activate bash
bash -> main --++ : "./preambule"

main -> semaphore:"sem_unlink"
activate semaphore #gold
return
main -> semaphore:"sem_open"
activate semaphore #gold
return

main -> thread1:"pthread_create"
activate thread1 #FFBBBB
thread1 --> main
note over thread1 : produce

main -> thread1 :"pthread_join"
deactivate main

thread1 -> mutex: "pthread_mutex_lock"
activate mutex #plum
return

thread1 -> mutex: "pthread_mutex_unlock"
activate mutex #plum
return

thread1 -> semaphore: "sem_post"
activate semaphore #gold
return

thread1 -> semaphore: "sem_wait"
activate semaphore #gold
return 

thread1 -> thread1 : "pthread_exit"
thread1 --> main --++

main -> semaphore : "sem_destroy"
activate semaphore #gold
return

main -> bash --++: "return ERROR_SUCCESS"

@enduml