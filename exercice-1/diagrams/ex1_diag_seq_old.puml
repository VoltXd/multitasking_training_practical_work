@startuml
!pragma teoz true
box "Diagramme de sÃ©quence"
participant "producers"
participant "mutexIndexFree" as mutex_free
participant "mutexIndexFull" as mutex_full
participant "semFree = N" as sem_free
participant "semFull = 0" as sem_full
participant "acquisitionManager"
participant "consumer" as consumer
end box

activate producers
producers -> sem_free : sem_wait()
activate sem_free #gold
return

producers -> mutex_free : pthread_mutex_lock()
activate mutex_free #gold
return

producers -> acquisitionManager : i = freeIndexArray[freeIndex]; freeIndex = (freeIndex + 1) % N

producers -> mutex_free : pthread_mutex_unlock()
activate mutex_free #gold
return

producers -> acquisitionManager : getInput(producerIndex, inputMsg); msgBuffer[i] = inputMsg

producers -> mutex_full : pthread_mutex_lock()
activate mutex_full #gold
return

producers -> acquisitionManager : fullIndexArray[fullIndex] = i; fullIndex = (fullIndex + 1) % N

producers -> mutex_full : pthread_mutex_unlock()
activate mutex_full #gold
return

producers -> sem_full : sem_post()
activate sem_full #gold
return

deactivate producers

activate consumer
consumer -> acquisitionManager : getMessage()
activate acquisitionManager #FFBBBB
acquisitionManager -> sem_full : sem_wait()
activate sem_full #gold
return
acquisitionManager -> sem_free : sem_post()
activate sem_free #gold
return
return

deactivate consumer


@enduml